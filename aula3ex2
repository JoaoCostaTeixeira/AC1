# Mapa de registos:
# $t0 – value
# $t1 – bit
# $t2 - i
 	.data
str1: .asciiz "Introduza um numero: "
str2: .asciiz "O valor em binário e': "
 	.eqv print_string, 4
 	.eqv read_int, 5
 	.eqv print_char, 11  
 	.text
	.globl main
	
main:   la $a0,str1
    	li $v0,print_string # instrução virtual
 	syscall # print_string(str1);
 	
 	li $v0, read_int 
	syscall 			#	value = read_int();  v
	move $t0, $v0
 	
 	li $t2,0 # i = 0
 	
for:    bge $t2,32,endfor          	# while(i < 32) {
 	andi $t1,$t0,0x80000000 	#
	
	bne $t1, $0, else 			# if(bit == 0)
	
    	li $v0,print_char # instrução virtual
    	li $a0, '0'
 	syscall # print_string('0');
 	j endif
 		
else: 	li $v0,print_char # instrução virtual
    	li $a0, '1'
 	syscall # print_string('1');
 	
 endif:	sll $t0, $t0, 1  #value = value << 1; 
 	add $t2, $t2, 1    #i= i + 1
 	rem $t3,$t2,4
 	bnez $t3, for 
 	
 	li $v0,print_char # instrução virtual
    	li $a0, ' '
 	syscall # print_string(' ');
 	j for 
 	
endfor: 
	
	  jr $ra # fim do programa
