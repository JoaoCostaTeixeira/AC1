library ieee;
use ieee.std_logic_1164.all;
entity ControlUnit is
	port( Clock : in std_logic;
			Reset : in std_logic;
			OpCode : in std_logic_vector(5 downto 0);
			PCWrite : out std_logic;
			IRWrite : out std_logic;
			IorD : out std_logic;
			PCSource : out std_logic_vector(1 downto 0);
			RegDest : out std_logic;
			PCWriteCond : out std_logic;
			MemRead : out std_logic;
			MemWrite : out std_logic;
			MemToReg : out std_logic;
			ALUSelA : out std_logic;
			ALUSelB : out std_logic_vector(1 downto 0);
			RegWrite : out std_logic;
			ALUop : out std_logic_vector(1 downto 0));
end ControlUnit;

architecture Behavioral of ControlUnit is
	type TState is ( E0, E1, E2, E3, E4, E5, E6 , E7, E8, E9, E10, E11);
	signal CS, NS : TState;
begin
	-- processo síncrono da máquina de estados (ME)
process(Clock) is
begin
	if(rising_edge(Clock)) then
		if(Reset = '1') then
			CS <= E0;
		else
			CS <= NS;
		end if;
	end if;
end process;
-- processo combinatório da ME na próxima página
end Behavioral;